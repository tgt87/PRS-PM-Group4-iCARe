# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Predictions(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, value: float=None, min: float=None, max: float=None):  # noqa: E501
        """Predictions - a model defined in Swagger

        :param name: The name of this Predictions.  # noqa: E501
        :type name: str
        :param value: The value of this Predictions.  # noqa: E501
        :type value: float
        :param min: The min of this Predictions.  # noqa: E501
        :type min: float
        :param max: The max of this Predictions.  # noqa: E501
        :type max: float
        """
        self.swagger_types = {
            'name': str,
            'value': float,
            'min': float,
            'max': float
        }

        self.attribute_map = {
            'name': 'name',
            'value': 'value',
            'min': 'min',
            'max': 'max'
        }
        self._name = name
        self._value = value
        self._min = min
        self._max = max

    @classmethod
    def from_dict(cls, dikt) -> 'Predictions':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Predictions of this Predictions.  # noqa: E501
        :rtype: Predictions
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Predictions.


        :return: The name of this Predictions.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Predictions.


        :param name: The name of this Predictions.
        :type name: str
        """

        self._name = name

    @property
    def value(self) -> float:
        """Gets the value of this Predictions.


        :return: The value of this Predictions.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value: float):
        """Sets the value of this Predictions.


        :param value: The value of this Predictions.
        :type value: float
        """

        self._value = value

    @property
    def min(self) -> float:
        """Gets the min of this Predictions.


        :return: The min of this Predictions.
        :rtype: float
        """
        return self._min

    @min.setter
    def min(self, min: float):
        """Sets the min of this Predictions.


        :param min: The min of this Predictions.
        :type min: float
        """

        self._min = min

    @property
    def max(self) -> float:
        """Gets the max of this Predictions.


        :return: The max of this Predictions.
        :rtype: float
        """
        return self._max

    @max.setter
    def max(self, max: float):
        """Sets the max of this Predictions.


        :param max: The max of this Predictions.
        :type max: float
        """

        self._max = max
