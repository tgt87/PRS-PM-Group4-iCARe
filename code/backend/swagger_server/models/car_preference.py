# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CarPreference(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, start_year: str=None, start_month: str=None, end_year: str=None, end_month: str=None, brand: List[str]=None, type: List[str]=None, budget: float=None):  # noqa: E501
        """CarPreference - a model defined in Swagger

        :param start_year: The start_year of this CarPreference.  # noqa: E501
        :type start_year: str
        :param start_month: The start_month of this CarPreference.  # noqa: E501
        :type start_month: str
        :param end_year: The end_year of this CarPreference.  # noqa: E501
        :type end_year: str
        :param end_month: The end_month of this CarPreference.  # noqa: E501
        :type end_month: str
        :param brand: The brand of this CarPreference.  # noqa: E501
        :type brand: List[str]
        :param type: The type of this CarPreference.  # noqa: E501
        :type type: List[str]
        :param budget: The budget of this CarPreference.  # noqa: E501
        :type budget: float
        """
        self.swagger_types = {
            'start_year': str,
            'start_month': str,
            'end_year': str,
            'end_month': str,
            'brand': List[str],
            'type': List[str],
            'budget': float
        }

        self.attribute_map = {
            'start_year': 'startYear',
            'start_month': 'startMonth',
            'end_year': 'endYear',
            'end_month': 'endMonth',
            'brand': 'brand',
            'type': 'type',
            'budget': 'budget'
        }
        self._start_year = start_year
        self._start_month = start_month
        self._end_year = end_year
        self._end_month = end_month
        self._brand = brand
        self._type = type
        self._budget = budget

    @classmethod
    def from_dict(cls, dikt) -> 'CarPreference':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CarPreference of this CarPreference.  # noqa: E501
        :rtype: CarPreference
        """
        return util.deserialize_model(dikt, cls)

    @property
    def start_year(self) -> str:
        """Gets the start_year of this CarPreference.


        :return: The start_year of this CarPreference.
        :rtype: str
        """
        return self._start_year

    @start_year.setter
    def start_year(self, start_year: str):
        """Sets the start_year of this CarPreference.


        :param start_year: The start_year of this CarPreference.
        :type start_year: str
        """

        self._start_year = start_year

    @property
    def start_month(self) -> str:
        """Gets the start_month of this CarPreference.


        :return: The start_month of this CarPreference.
        :rtype: str
        """
        return self._start_month

    @start_month.setter
    def start_month(self, start_month: str):
        """Sets the start_month of this CarPreference.


        :param start_month: The start_month of this CarPreference.
        :type start_month: str
        """

        self._start_month = start_month

    @property
    def end_year(self) -> str:
        """Gets the end_year of this CarPreference.


        :return: The end_year of this CarPreference.
        :rtype: str
        """
        return self._end_year

    @end_year.setter
    def end_year(self, end_year: str):
        """Sets the end_year of this CarPreference.


        :param end_year: The end_year of this CarPreference.
        :type end_year: str
        """

        self._end_year = end_year

    @property
    def end_month(self) -> str:
        """Gets the end_month of this CarPreference.


        :return: The end_month of this CarPreference.
        :rtype: str
        """
        return self._end_month

    @end_month.setter
    def end_month(self, end_month: str):
        """Sets the end_month of this CarPreference.


        :param end_month: The end_month of this CarPreference.
        :type end_month: str
        """

        self._end_month = end_month

    @property
    def brand(self) -> List[str]:
        """Gets the brand of this CarPreference.


        :return: The brand of this CarPreference.
        :rtype: List[str]
        """
        return self._brand

    @brand.setter
    def brand(self, brand: List[str]):
        """Sets the brand of this CarPreference.


        :param brand: The brand of this CarPreference.
        :type brand: List[str]
        """

        self._brand = brand

    @property
    def type(self) -> List[str]:
        """Gets the type of this CarPreference.


        :return: The type of this CarPreference.
        :rtype: List[str]
        """
        return self._type

    @type.setter
    def type(self, type: List[str]):
        """Sets the type of this CarPreference.


        :param type: The type of this CarPreference.
        :type type: List[str]
        """

        self._type = type

    @property
    def budget(self) -> float:
        """Gets the budget of this CarPreference.


        :return: The budget of this CarPreference.
        :rtype: float
        """
        return self._budget

    @budget.setter
    def budget(self, budget: float):
        """Sets the budget of this CarPreference.


        :param budget: The budget of this CarPreference.
        :type budget: float
        """

        self._budget = budget
